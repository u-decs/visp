name: Code-coverage

# https://www.jeffgeerling.com/blog/2020/running-github-actions-workflow-on-schedule-and-other-events
on:
  pull_request:
    types: [opened, reopened, synchronize]
  schedule:
    - cron: '0 2 * * SUN'

# https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre#comment133398800_72408109
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-coverage:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Print system information
      run: lscpu

    - name: Print OS information
      run: lsb_release -a

    - name: Print compiler information
      run: dpkg --list | grep compiler

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y libx11-dev libdc1394-dev libv4l-dev liblapack-dev libopenblas-dev libeigen3-dev libopencv-dev nlohmann-json3-dev lcov gcovr

    - name: Clone visp-images
      env:
        BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      # https://remarkablemark.org/blog/2022/09/25/check-git-branch-exists-in-remote-repository/
      run: |
        git clone --depth 1 https://github.com/lagadic/visp-images ${HOME}/visp-images
        echo "VISP_INPUT_IMAGE_PATH=$HOME" >> $GITHUB_ENV
        echo ${VISP_INPUT_IMAGE_PATH}

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_COVERAGE=ON -DBUILD_DEPRECATED_FUNCTIONS=OFF
        cat ViSP-third-party.txt

    - name: Compile
      working-directory: build
      run: make -j$(nproc)

    # https://blog.ineat-group.com/2020/07/exploiter-votre-code-coverage-avec-codecov-io-flutter-tips-of-the-month-5/
    - name: Run code coverage
      working-directory: build
      run: |
        lcov --zerocounters --directory .
        cmake --build . --target all -j$(nproc)
        cmake --build . --target test -j$(nproc)
        lcov --ignore mismatch --directory . --capture --output-file visp-coverage.info
        lcov --ignore-errors unused --remove visp-coverage.info \
          '/usr/*' \
          '*/private/*' \
          '*/test/*' \
          "/*/3rdparty/*" \
          "/*/demo/*" \
          "/*/example/*" \
          "/*/modules/gui*" \
          "/*/modules/io/src/parallel-port*" \
          "/*/modules/robot*" \
          --output-file visp-coverage.cleaned

    - name: Upload report to Codecov
      uses: codecov/codecov-action@v5
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        files: ./build/visp-coverage.cleaned
        disable_search: true
        fail_ci_if_error: true
        verbose: true
